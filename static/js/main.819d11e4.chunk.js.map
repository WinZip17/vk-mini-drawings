{"version":3,"sources":["App.js","panels/Posts.js","panels/PhotoPreview.js","panels/Ð¡atalog.js","api.js","index.js"],"names":["imgGlob","imgForMessage","sendMessage","Posts","id","postArr","showPhoto","setActiveModal","groupInfo","useEffect","console","log","getPhotoArr","arrDoc","photoArr","i","length","type","push","photo","map","p","is_pinned","key","before","src","photo_50","size","description","date","moment","format","className","target","href","name","text","attachments","lastItem","sizes","url","alt","onClick","wide","owner_id","mode","vertical","osName","platform","PhotoPreview","go","left","data-to","IOS","Catalog","props","setPopout","userArr","lang","checkMessage","isMessagesFromGroupAllowed","setcheckMessage","useState","fetching","setFetching","getUser","userID","connect","send","fetch","then","response","json","data","arr","content","$t","join","getUserId","feed","entry","getTable","fetchedUser","onRefresh","min","max","setTimeout","Math","floor","random","separator","asideContent","checked","onChange","e","currentTarget","isFetching","first_name","last_name","service_token","userId","access_token_photo_glob","offset","App","activeView","setActiveView","activePanel","setActivePanel","setUser","popout","setUserArr","setLang","setPostArr","setPhoto","activeModal","img","setImg","message","setMessage","access_token_photo","setAccess_token_photo","setGroupInfo","urlParams","URLSearchParams","window","location","search","a","user","get","subscribe","detail","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","access_token","getAlbum","request_id","concat","items","is_allowed","find","group","count","createAlbum","undefined","x","title","albumId","postPhotoUrl","postPhoto","upload_url","album_id","group_id","createMessage","fetchData","getPosts","getGroupInfo","addEventListener","handleScroll","removeEventListener","currentScroll","scrollY","innerHeight","scrollHeight","documentElement","offsetHeight","clientHeight","getPostsAdd","dataset","to","vkConnectPromise","catch","error","guid","Date","postData","round","modal","onClose","icon","caption","actions","action","actionsLayout","placeholder","top","file","files","reader","FileReader","readAsDataURL","onloadend","result","disabled","gerTokenUser","newToken","formData","FormData","append","method","headers","savePhoto","server","photos_list","hash","nToken","activeStory","tabbar","selected","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.819d11e4.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './App.css'\nimport Home from './panels/Home';\nimport Epic from \"@vkontakte/vkui/dist/components/Epic/Epic\";\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Posts from \"./panels/Posts\";\nimport PhotoPreview from \"./panels/PhotoPreview\";\nimport ModalCard from \"@vkontakte/vkui/dist/components/ModalCard/ModalCard\";\nimport ModalRoot from \"@vkontakte/vkui/dist/components/ModalRoot/ModalRoot\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\nimport Textarea from \"@vkontakte/vkui/dist/components/Textarea/Textarea\";\nimport File from \"@vkontakte/vkui/dist/components/File/File\";\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport vkConnectPromise from '@vkontakte/vk-connect-promise';\nimport Catalog from \"./panels/Ð¡atalog\";\n\n//Ð»Ð¸ÑÐ½ÑÐ¹ ÑÐ¾ÐºÐµÐ½ Ð°Ð´Ð¼Ð¸Ð½Ð° Ð³ÑÑÐ¿Ð¿Ñ\nconst token_admin = \"16ac9fa774aa9ccb80fc5f083a19e0f2aa6cb6da5044cc08078ca5085d0db198b24a8ef7a9bd68515b65f\";\n//id Ð³ÑÑÐ¿Ð¿Ñ Ñ ÐºÐ¾ÑÐ¾ÑÐ¾Ð¹ ÑÐ°Ð±Ð¾ÑÐ°ÐµÐ¼\nconst group_id = \"113161053\";\n\n//ÑÐµÑÐ²Ð¸ÑÐ½ÑÐ¹ ÐºÐ»ÑÑ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ\nconst service_token = 'c6f961fbc6f961fbc6f961fbf0c696cc53cc6f9c6f961fb98bd9f39d8cccff2eea6e9d3'\n\n//ÐºÐ»ÑÑ ÑÐ¾Ð¾Ð±ÑÐµÑÑÐ²Ð°\nconst group_token = 'e85c766c364f7ab9730b777f847d14a5790fcaf01578f45ac58398a39256c319db836c857ac0f990db1ec'\n\nlet userId = 0;\nlet access_token_photo_glob = 0;\nlet app_id = 7138591\nlet albumIdForPhoto\nlet imgGlob\nlet imgForMessage\nlet sendMessage\nlet offset = 30\nlet fetching = true\n\nconst App = () => {\n    const [activeView, setActiveView] = useState('post');\n    const [activePanel, setActivePanel] = useState('home');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [userArr, setUserArr] = useState([])\n    const [lang, setLang] = useState('ru')\n    const [postArr, setPostArr] = useState([])\n    const [photo, setPhoto] = useState('')\n    const [activeModal, setActiveModal] = useState('subscription')\n    const [checkMessage, setcheckMessage] = useState(false)\n    const [img, setImg] = useState(null)\n    const [message, setMessage] = useState('')\n    const [access_token_photo, setAccess_token_photo] = useState(0)\n    const [groupInfo, setGroupInfo] = useState(null)\n\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setLang(urlParams.get('vk_language' || \"ru\"))\n        connect.subscribe(({detail: {type, data}}) => {\n            switch (type) {\n                case 'VKWebAppUpdateConfig':\n                    const schemeAttribute = document.createAttribute('scheme');\n                    schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                    document.body.attributes.setNamedItem(schemeAttribute);\n                    break;\n                case 'VKWebAppAllowMessagesFromGroupResult':\n                    setPopout(null)\n                    isMessagesFromGroupAllowed()\n                    break;\n                case 'VKWebAppAllowMessagesFromGroupFailed':\n                    setPopout(null)\n                    isMessagesFromGroupAllowed()\n                    break;\n                case 'VKWebAppAccessTokenReceived':\n                    if (access_token_photo === 0) {\n                        setAccess_token_photo(data.access_token)\n                        access_token_photo_glob = data.access_token\n                        getAlbum(userId, data.access_token)\n                    }\n                    break;\n                case 'VKWebAppCallAPIMethodResult':\n                    switch (data.request_id) {\n                        case 'getUsers':\n                            setPopout(null)\n                            setUserArr(data.response)\n                            break;\n                        case 'getPosts':\n                            setPopout(null)\n                            setPostArr(postArr.concat(data.response.items))\n                            break;\n                        case 'checkMessage':\n                            setPopout(null)\n                            data.response.is_allowed === 0 ? setcheckMessage(false) : setcheckMessage(true)\n                            break;\n                        case 'userAlbums':\n                            const find = \"ÐÐ¾Ð¸ ÑÐ¸ÑÑÐ½ÐºÐ¸, Ð½Ð°Ð±ÑÐ¾ÑÐºÐ¸\";\n                            const group = data.response.items\n                            if (data.response.count === 0) {\n                                createAlbum(find, find, access_token_photo_glob)\n                            } else if (group.find(x => x.title === find) === undefined) {\n                                createAlbum(find, find, access_token_photo_glob)\n                            } else {\n                                let albumId = group.find(x => x.title === find).id\n                                albumIdForPhoto = albumId\n                                postPhotoUrl(albumId, access_token_photo_glob)\n                            }\n                            break;\n                        case 'createAlbum':\n                            albumIdForPhoto = data.response.id\n                            postPhotoUrl(data.response.id, access_token_photo_glob)\n                            break;\n                        case 'photoUrl':\n                            postPhoto(data.response.upload_url, imgGlob, access_token_photo_glob, data.response.album_id)\n                            break;\n                        case 'photoSave':\n                            imgForMessage = `photo${data.response[0].group_id}_${data.response[0].id}`\n                            createMessage()\n                            break;\n                        case 'sendWall':\n                            setPopout(null);\n                            setActiveModal(\"sendResult\")\n                            setMessage('')\n                            setImg(null)\n                            break;\n                        case 'getGroup':\n                            setPopout(null);\n                            setGroupInfo(data.response[0])\n                            break;\n                        default:\n                            console.log(type)\n                    }\n                    break;\n                default:\n                    console.log(type);\n            }\n        });\n\n        async function fetchData() {\n            const user = await connect.send('VKWebAppGetUserInfo');\n            setUser(user);\n            userId = user.id\n            setPopout(null);\n        }\n\n        fetchData();\n        getPosts()\n        getGroupInfo()\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n\n    const handleScroll = (e) => {\n        let currentScroll = e.currentTarget.scrollY;\n        let innerHeight = window.innerHeight;\n        let scrollHeight = Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        );\n        if (innerHeight + currentScroll > scrollHeight * 0.70 && fetching && innerHeight + 1000 < currentScroll) {\n            fetching = false;\n            getPostsAdd()\n        }\n    };\n\n\n    const addGroup = () => {\n        connect.send(\"VKWebAppJoinGroup\", {\"group_id\": +group_id});\n    }\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    const showPhoto = (photo) => {\n        setPhoto(photo)\n        setActivePanel('photo')\n    }\n\n    const getPostsAdd = async () => {\n        setPopout(<ScreenSpinner size='large'/>)\n        vkConnectPromise\n            .send(\"VKWebAppCallAPIMethod\", {\n                \"method\": \"wall.get\",\n                \"request_id\": \"getPostsAdd\",\n                \"params\": {\n                    \"filters\": 'post',\n                    \"owner_id\": `-${group_id}`,\n                    \"count\": 50,\n                    \"v\": \"5.105\",\n                    \"access_token\": service_token,\n                    'lang': lang,\n                    'offset': offset\n                }\n            })\n            .then(data => {\n                setPostArr(postArr.concat(data.response.items))\n                offset = offset + 30\n                setPopout(null);\n                fetching = true\n            })\n            .catch(error => {\n                // Handling an error\n            });\n\n    }\n\n    const getPosts = () => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"wall.get\",\n            \"request_id\": \"getPosts\",\n            \"params\": {\n                \"filters\": 'post',\n                \"owner_id\": `-${group_id}`,\n                \"count\": 30,\n                \"v\": \"5.105\",\n                \"access_token\": service_token,\n                'lang': lang\n            }\n        });\n    }\n\n    const getGroupInfo = () => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"groups.getById\",\n            \"request_id\": \"getGroup\",\n            \"params\": {\n                \"fields\": 'description',\n                \"group_ids\": `${group_id}`,\n                \"v\": \"5.105\",\n                \"access_token\": service_token,\n                'lang': lang\n            }\n        });\n    }\n\n    const isMessagesFromGroupAllowed = () => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"messages.isMessagesFromGroupAllowed\",\n            \"request_id\": \"checkMessage\",\n            \"params\": {\n                \"user_id\": userId,\n                \"group_id\": group_id,\n                \"v\": \"5.105\",\n                \"access_token\": group_token,\n            }\n        });\n    }\n\n    const sendPost = () => {\n        setActiveModal(null)\n        setPopout(<ScreenSpinner size='large'/>)\n        if (img === null) {\n            createMessage()\n        } else {\n            gerTokenUser()\n        }\n    };\n\n    const createMessage = () => {\n        let attachments = `${imgForMessage}`;\n        //ÑÐ³ÐµÐ½ÐµÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ guid\n        let guid = Math.floor(1000000000 + Math.random() * (9000000000 + 1 - 1000000000));\n        let data = +new Date();\n        let postData = Math.round(data/1000)+86400;\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"wall.post\", \"request_id\": \"sendWall\", \"params\": {\n                \"owner_id\": `-${group_id}`,\n                \"from_group\": \"1\",\n                \"signed\": \"0\",\n                \"message\": sendMessage,\n                \"attachments\": attachments,\n                \"publish_date\": +postData,\n                \"guid\": guid,\n                \"v\": \"5.103\",\n                \"access_token\": token_admin\n            }\n        });\n    }\n\n    const modal = (\n        <ModalRoot activeModal={activeModal}>\n            <ModalCard\n                id='subscription'\n                onClose={() => setActiveModal(null)}\n                icon={<Avatar src={groupInfo && groupInfo.photo_50} size={72}/>}\n                caption={<span><h1>{groupInfo && groupInfo.name}</h1>ÐÐ¸Ð½Ð¸ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ Ð¿ÑÐµÐ´Ð»Ð°Ð³Ð°ÐµÑ ÐÐ°Ð¼ <br/> Ð¿Ð¾Ð´Ð¿Ð¸ÑÐ°ÑÑÑÑ Ð½Ð° ÑÐ¾Ð¾Ð±ÑÐµÑÑÐ²Ð¾</span>}\n                actions={[{\n                    title: 'ÐÐ¾Ð´Ð¿Ð¸ÑÐ°ÑÑÑÑ',\n                    mode: 'primary',\n                    action: () => {\n                        addGroup()\n                        setActiveModal(null)\n                    }\n                }]}\n                actionsLayout=\"vertical\"\n            >\n            </ModalCard>\n            <ModalCard\n                id='sendPost'\n                onClose={() => setActiveModal(null)}\n            >\n                <Div>\n                    <h1>ÐÑÐµÐ´Ð»Ð¾Ð¶Ð¸ÑÑ Ð½Ð¾Ð²Ð¾ÑÑÑ</h1>\n                    <Textarea className='margin-bottom' value={message} onChange={(e) => {\n                        setMessage(e.currentTarget.value)\n                        sendMessage = e.currentTarget.value\n                    }} placeholder='ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐµÐºÑÑ Ð½Ð¾Ð²Ð¾ÑÑÐ¸'/>\n                    <File top=\"ÐÐ°Ð³ÑÑÐ·Ð¸ÑÐµ ÐºÐ°ÑÑÐ¸Ð½ÐºÑ\" className='margin-bottom' before={<Icon24Camera/>} size=\"l\"\n                          onChange={(e) => {\n                              let file = e.currentTarget.files[0]\n                              imgGlob = e.currentTarget.files[0]\n                              const reader = new FileReader();\n                              reader.readAsDataURL(file)\n                              reader.onloadend = () => {\n                                  setImg(reader.result)\n                              }\n                          }}>\n                        ÐÑÐ¸ÐºÑÐµÐ¿Ð¸ÑÑ ÐºÐ°ÑÑÐ¸Ð½ÐºÑ\n                    </File>\n                    {img && <img className='margin-bottom modal-img' src={img} alt='img'/>}\n                    <Button mode=\"secondary\" size=\"xl\" disabled={!message} onClick={() => sendPost()}>ÐÑÐ¿ÑÐ°Ð²Ð¸ÑÑ</Button>\n                </Div>\n            </ModalCard>\n            <ModalCard\n                id='sendResult'\n                onClose={() => setActiveModal(null)}\n                actions={[\n                    {\n                        title: 'ÐÑÐ»Ð¸ÑÐ½Ð¾!',\n                        mode: 'primary',\n                        action: () => {\n                            setActiveModal(null)\n                        }\n                    }\n                ]}\n            >\n                <Div>\n                    <h1>ÐÐ¾Ð²Ð¾ÑÑÑ ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð°!</h1>\n                </Div>\n            </ModalCard>\n        </ModalRoot>\n    );\n\n    //Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ðµ ÑÑÑÐ»ÐºÐ¸ Ð½Ð° Ð·Ð°Ð³ÑÑÐ·ÐºÑ ÑÐ¾ÑÐºÐ¸\n    const postPhotoUrl = (album_id, newToken) => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"photos.getUploadServer\", \"request_id\": \"photoUrl\", \"params\": {\n                \"album_id\": album_id,\n                \"v\": \"5.103\", \"access_token\": newToken\n            }\n        });\n    };\n\n//Ð¾ÑÐ¿ÑÐ°Ð²ÐºÐ° ÑÐ¾ÑÐºÐ¸ Ð½Ð° ÑÐµÑÐ²ÐµÑ\n    const postPhoto = (url, photo, newToken, album_id) => {\n        let formData = new FormData();\n        formData.append('photo', photo);\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        fetch(proxyurl + url, {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n        })\n            .then(function (response) {\n                return response.json();\n            })\n            .then(function (data) {\n                if (data) {\n                    savePhoto(data.server, data.photos_list, data.hash, newToken, album_id);\n                } else {\n                    // proccess server errors\n                }\n            })\n            .catch(function (error) {\n                // proccess network errors\n            });\n    };\n\n\n//ÑÐ¾ÑÑÐ°Ð½ÐµÐ½Ð¸Ðµ ÑÐ¾ÑÐºÐ¸\n    const savePhoto = (server, photos_list, hash, newToken, album_id) => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"photos.save\", \"request_id\": \"photoSave\", \"params\": {\n                \"album_id\": album_id,\n                \"server\": server,\n                \"photos_list\": photos_list,\n                \"hash\": hash,\n                \"v\": \"5.101\",\n                \"access_token\": newToken\n            }\n        });\n    };\n\n\n//Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ðµ ÑÐ¿Ð¸ÑÐºÐ° Ð°Ð»ÑÐ±Ð¾Ð¼Ð¾Ð² Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»Ñ\n    const getAlbum = (id, nToken) => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"photos.getAlbums\", \"request_id\": \"userAlbums\", \"params\": {\n                \"owner_id\": id, \"v\": \"5.103\", \"access_token\": nToken\n            }\n        });\n    }\n\n//ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ðµ Ð°Ð»Ð±Ð¾Ð¼Ð° ÐµÑÐ»Ð¸ ÐµÐ³Ð¾ Ð½ÐµÑ\n    const createAlbum = (title, description, nToken) => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"photos.createAlbum\", \"request_id\": \"createAlbum\", \"params\": {\n                \"title\": title, \"description\": description, \"v\": \"5.103\", \"access_token\": nToken\n            }\n        });\n    }\n\n//Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ðµ ÑÐ¾ÐºÐµÐ½Ð° Ð½Ð° ÑÐ°Ð±Ð¾ÑÑ Ñ ÑÐ¾ÑÐ¾\n    const gerTokenUser = () => {\n        connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": app_id, \"scope\": \"photos\"});\n    }\n\n    return (\n        <Epic activeStory={activeView} tabbar={\n            <Tabbar>\n                <TabbarItem\n                    onClick={() => setActiveView('post')}\n                    selected={activeView === 'post'}\n                    // text=\"ÐÐ¾Ð²Ð¾ÑÑÐ¸\"\n                ><Icon28Newsfeed/></TabbarItem>\n                <TabbarItem\n                    onClick={() => setActiveView('catalog')}\n                    selected={activeView === 'catalog'}\n                    // text=\"ÐÐ°ÑÐ°Ð»Ð¾Ð³ ÑÑÐ´Ð¾Ð¶Ð½Ð¸ÐºÐ¾Ð²\"\n                ><Icon28More/></TabbarItem>\n            </Tabbar>\n        }>\n            <View activePanel={activePanel} popout={popout} id=\"post\" modal={modal}>\n                <Posts id='home' fetchedUser={fetchedUser} go={go} setPopout={setPopout} lang={lang} postArr={postArr}\n                       offset={offset} groupInfo={groupInfo}\n                       showPhoto={showPhoto} getPosts={getPosts} setActiveModal={setActiveModal}/>\n                <PhotoPreview id='photo' go={go} photo={photo}/>\n            </View>\n            <View activePanel={'people'} popout={popout} id=\"catalog\">\n                <Catalog setPopout={setPopout} id='people' fetchedUser={fetchedUser} go={go}\n                         userArr={userArr} lang={lang} checkMessage={checkMessage} setcheckMessage={setcheckMessage}\n                         isMessagesFromGroupAllowed={isMessagesFromGroupAllowed}/>\n            </View>\n        </Epic>\n    );\n}\n\nexport default App;\n\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport moment from \"moment\";\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\nimport Icon24OpenIn from '@vkontakte/icons/dist/24/open_in';\n\n\nconst Posts = ({ id, postArr,  showPhoto, setActiveModal, groupInfo }) => {\n\n\tuseEffect(() => {\n\t}, []);\n\n\n\tconst getDate = (date) => {\n\t\treturn moment(date*1000).format('DD.MM.YYYY  h:mm')\n\t}\n\tconsole.log(groupInfo)\n\tconst getPhotoArr = (arrDoc) => {\n\t\tlet photoArr = []\n\t\tfor (let i = 0; i < arrDoc.length; i++) {\n\t\t\tif (arrDoc[i].type === \"photo\") {\n\t\t\t\tphotoArr.push(arrDoc[i].photo)\n\t\t\t}\n\t\t}\n\t\treturn photoArr\n\t}\n\n\treturn <Panel id={id}>\n\t\t<PanelHeader>ÐÐµÐ½ÑÐ°</PanelHeader>\n\t\t{postArr.length > 0 && postArr.map((p) => {\n\t\t\tif (!p.is_pinned) {\n\t\t\t\treturn <Group key={p.id}>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={<Avatar  src={groupInfo && groupInfo.photo_50} size={48}></Avatar>}\n\t\t\t\t\t\t\tdescription={getDate(p.date)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<a className='text-decor-none' target='_blank' href='https://vk.com/moiresunke'>{groupInfo && groupInfo.name}</a>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t{p.text}\n\t\t\t\t\t\t{getPhotoArr(p.attachments).length > 0 && <Div ><div className='photo-shell'>{getPhotoArr(p.attachments).map((p) => {\n\t\t\t\t\t\t\tlet lastItem = p.sizes.length - 1\n\t\t\t\t\t\t\t// return <a key={p.id} href={p.sizes[lastItem].url}><img src={p.sizes[lastItem].url} alt={'img'} /></a>\n\t\t\t\t\t\t\treturn <div className='photo-div' key={p.id}><img key={p.id} className='photo-post' src={p.sizes[lastItem].url} alt={'img'} onClick={() => showPhoto(p.sizes[lastItem].url)} /></div>\n\t\t\t\t\t\t})}</div>\n\t\t\t\t\t\t\t<Separator wide />\n\n\t\t\t\t\t\t\t<a target='_blank' className='fix-link' href={`https://vk.com/moiresunke?w=wall${p.owner_id}_${p.id}`} > <Button mode=\"secondary\" className='fix-margin-icon' >ÐÐ±ÑÑÐ´Ð¸ÑÑ</Button></a>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<FixedLayout vertical=\"bottom\">\n\t\t\t\t\t\t\t\t<Button before={<Icon24OpenIn/>} size=\"xl\" onClick={() => setActiveModal('sendPost')} > ÐÑÐµÐ´Ð»Ð¾Ð¶Ð¸ÑÑ Ð½Ð¾Ð²Ð¾ÑÑÑ </Button>\n\t\t\t\t\t\t</FixedLayout>\n\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t}\n\t\t})}\n\t</Panel>\n};\n\nPosts.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Posts;\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\n// import HeaderButton from \"@vkontakte/vkui/dist/components/HeaderButton/HeaderButton\";\nimport {IOS, platform} from \"@vkontakte/vkui\";\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport PanelHeaderButton from \"@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton\";\n\nconst osName = platform();\n\nconst PhotoPreview = ({ id, photo, go}) => {\n\n\treturn <Panel id={id}>\n\t\t\t<PanelHeader\n\t\tleft={<PanelHeaderButton  onClick={go} data-to=\"home\">\n\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t</PanelHeaderButton >}\n\t> </PanelHeader>\n\t\t<img src={photo} alt={'img'} className='photo-preview' />\n\t</Panel>\n};\n\nPhotoPreview.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default PhotoPreview;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Switch from '@vkontakte/vkui/dist/components/Switch/Switch';\nimport PullToRefresh from '@vkontakte/vkui/dist/components/PullToRefresh/PullToRefresh';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport connect from \"@vkontakte/vk-connect\";\nimport {getTable} from \"../api\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\n\nconst getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\n\nconst Catalog = (props) => {\n\n    const {id, setPopout, userArr, lang, checkMessage, isMessagesFromGroupAllowed, setcheckMessage} = props\n    const [fetching, setFetching] = useState(false)\n    const getUser = (userID) => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"users.get\",\n            \"request_id\": \"getUsers\",\n            \"params\": {\n                \"user_ids\": userID,\n                \"v\": \"5.103\",\n                \"fields\": 'photo_50',\n                \"access_token\": '85685eaa85685eaa85685eaa2d8504b3b58856885685eaad8e8ae5c720f4db08e7e9ee0',\n                'lang' : lang\n            }\n        });\n    }\n\n    useEffect(() => {\n        setPopout(<ScreenSpinner size='large' />)\n        getTable(getUser)\n    }, []);\n\n\n\n    useEffect(() => {\n        if (props.fetchedUser) {\n            isMessagesFromGroupAllowed()\n        }\n    }, [props.fetchedUser]);\n\n\n    const people = []\n\n    const onRefresh = () => {\n        setFetching(true)\n\n        setTimeout(() => {\n            setFetching(false)\n            // this.setState({\n            // \titems: [this.getNewItem(), ...this.state.items],\n            // \tfetching: false\n            // });\n        }, getRandomInt(600, 2000));\n    }\n\n\n\n    const sendAllowMessage = (e) => {\n        if (e.currentTarget.checked) {\n            setPopout(<ScreenSpinner size='large' />)\n            connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 185650440, \"key\": \"dBuBKe1kFcdemzB\"});\n        } else {\n            setcheckMessage(false)\n        }\n    }\n\n\treturn <Panel id={id}>\n\t\t<PanelHeader>ÐÐ°ÑÐ°Ð»Ð¾Ð³ ÑÑÐ´Ð¾Ð¶Ð½Ð¸ÐºÐ¾Ð²</PanelHeader>\n\t\t<Group description=\"ÐÑ Ð±ÑÐ´ÐµÑÐµ Ð¿Ð¾Ð»ÑÑÐ°ÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð²Ð°Ð¶Ð½ÑÐµ ÑÐ²ÐµÐ´Ð¾Ð¼Ð»ÐµÐ½Ð¸Ñ\"\n\t\t\t   separator=\"show\">\n\t\t\t<Cell asideContent={<Switch checked={checkMessage} onChange={sendAllowMessage}/>}>\n\t\t\t\tPush-ÑÐ²ÐµÐ´Ð¾Ð¼Ð»ÐµÐ½Ð¸Ñ\n\t\t\t</Cell>\n\t\t</Group>\n\t\t<PullToRefresh onRefresh={() => onRefresh()} isFetching={fetching}>\n\t\t\t<Group>\n\t\t\t\t<List>\n                    {userArr.map((p, i) => <Cell key={i} target='_blank' href={`https://vk.com/id${p.id}`}\n                                                 before={<Avatar src={p.photo_50}/>}\n                    >{p.first_name} {p.last_name}</Cell>)}\n\t\t\t\t</List>\n\t\t\t</Group>\n\t\t</PullToRefresh>\n        <FixedLayout vertical=\"bottom\">\n                <Button target='_blanck' className='button-fix' size=\"xl\" href='https://vk.com/app5619682_-113161053#467432' > ÐÐ¾Ð¿Ð°ÑÑÑ Ð² ÐºÐ°ÑÐ°Ð»Ð¾Ð³ </Button>\n        </FixedLayout>\n\n\t</Panel>\n\n}\n\n\nCatalog.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Catalog;\n","\r\nconst getUserId = (data) => {\r\n    let arr = []\r\n    for (let i = 0; i < data.length; i++) {\r\n        arr.push(data[i].content.$t)\r\n    }\r\n    return arr.join(',')\r\n}\r\n\r\n\r\nexport const getTable = (getUser) => {\r\n    fetch('https://spreadsheets.google.com/feeds/cells/1SX9lV4-URRyErZJT-tDc6-A4vbpMzTniQKtUsRk10kg/1/public/full?alt=json')\r\n        .then(function(response) {\r\n            return response.json();\r\n        })\r\n        .then(function(data) {\r\n            if(data) {\r\n                // setShowUsers(getUserId(data.feed.entry))\r\n                getUser(getUserId(data.feed.entry))\r\n            }\r\n        })\r\n}\r\n\r\n\r\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// ÐÑÐ»Ð¸ Ð²Ñ ÑÐ¾ÑÐ¸ÑÐµ, ÑÑÐ¾Ð±Ñ Ð²Ð°ÑÐµ Ð²ÐµÐ±-Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ ÑÐ°Ð±Ð¾ÑÐ°Ð»Ð¾ Ð² Ð¾ÑÑÐ»Ð°Ð¹Ð½Ðµ Ð¸ Ð·Ð°Ð³ÑÑÐ¶Ð°Ð»Ð¾ÑÑ Ð±ÑÑÑÑÐµÐµ,\n// ÑÐ°ÑÑÐºÐ¾Ð¼Ð¼ÐµÐ½ÑÐ¸ÑÑÐ¹ÑÐµ ÑÑÑÐ¾ÐºÑ Ñ registerServiceWorker();\n// ÐÐ¾ Ð½Ðµ Ð·Ð°Ð±ÑÐ²Ð°Ð¹ÑÐµ, ÑÑÐ¾ Ð½Ð° Ð´Ð°Ð½Ð½ÑÐ¹ Ð¼Ð¾Ð¼ÐµÐ½Ñ Ñ ÑÐµÑÐ½Ð¾Ð»Ð¾Ð³Ð¸Ð¸ ÐµÑÑÑ Ð´Ð¾ÑÑÐ°ÑÐ¾ÑÐ½Ð¾ Ð¿Ð¾Ð´Ð²Ð¾Ð´Ð½ÑÑ ÐºÐ°Ð¼Ð½ÐµÐ¹\n// ÐÐ¾Ð´ÑÐ¾Ð±Ð½ÐµÐµ Ð¿ÑÐ¾ ÑÐµÑÐ²Ð¸Ñ Ð²Ð¾ÑÐºÐµÑÑ Ð¼Ð¾Ð¶Ð½Ð¾ Ð¿Ð¾ÑÐ¸ÑÐ°ÑÑ ÑÑÑ â https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}