{"version":3,"sources":["img/persik.png","panels/Persik.js","panels/Posts.js","panels/Сatalog.js","api.js","panels/PhotoPreview.js","App.js","index.js"],"names":["module","exports","platform","Posts","id","postArr","showPhoto","useEffect","getPhotoArr","arrDoc","photoArr","i","length","type","push","photo","map","p","is_pinned","key","before","src","size","description","date","moment","format","className","target","href","text","attachments","lastItem","sizes","url","wide","owner_id","vertical","mode","Сatalog","props","setPopout","userArr","lang","useState","fetching","setFetching","getUser","userID","connect","send","fetch","then","response","json","data","arr","content","$t","join","getUserId","feed","entry","getTable","onRefresh","min","max","setTimeout","Math","floor","random","separator","asideContent","isFetching","photo_50","first_name","last_name","osName","PhotoPreview","go","left","onClick","data-to","IOS","alt","App","activeView","setActiveView","activePanel","setActivePanel","fetchedUser","setUser","popout","setUserArr","setLang","setPostArr","offset","setOffset","setPhoto","urlParams","URLSearchParams","window","location","search","a","user","get","subscribe","detail","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","request_id","items","console","log","fetchData","getPosts","e","currentTarget","dataset","to","activeStory","tabbar","selected","ReactDOM","render","getElementById"],"mappings":"uIAAAA,EAAOC,QAAU,IAA0B,oC,kxBCY5BC,c,mOCsEAC,GAlED,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,QAAUC,EAAgB,EAAhBA,UAE9BC,qBAAU,cACP,IAGH,IAIMC,EAAc,SAACC,GAEpB,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACX,UAAnBF,EAAOE,GAAGE,MACbH,EAASI,KAAKL,EAAOE,GAAGI,OAG1B,OAAOL,GAGR,OAAO,kBAAC,IAAD,CAAON,GAAIA,GACjB,kBAAC,IAAD,uCACCC,EAAQO,OAAS,GAAKP,EAAQW,KAAI,SAACC,GACnC,IAAKA,EAAEC,UACN,OAAO,kBAAC,IAAD,CAAOC,IAAKF,EAAEb,IACpB,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCgB,OAAQ,kBAAC,IAAD,CAASC,IAAI,wEAAwEC,KAAM,KACnGC,aAtBWC,EAsBUP,EAAEO,KArBrBC,IAAY,IAALD,GAAWE,OAAO,sBAuB3B,uBAAGC,UAAU,kBAAkBC,OAAO,SAASC,KAAK,6BAApD,yIAEAZ,EAAEa,KACFtB,EAAYS,EAAEc,aAAanB,OAAS,GAAK,kBAAC,IAAD,KAAM,yBAAKe,UAAU,eAAenB,EAAYS,EAAEc,aAAaf,KAAI,SAACC,GAAO,IAAD,EAC/Ge,EAAWf,EAAEgB,MAAMrB,OAAS,EAEhC,OAAO,4BAAKO,IAAKF,EAAEb,GAAIuB,UAAU,cAA1B,oBAA4CV,EAAEb,IAA9C,oBAAuDa,EAAEgB,MAAMD,GAAUE,KAAzE,oBAAmF,OAAnF,yBAAmG,kBAAM5B,EAAUW,EAAEgB,MAAMD,GAAUE,QAArI,QAEP,kBAAC,IAAD,CAAWC,MAAI,IACf,uBAAGP,OAAO,SAASC,KAAI,0CAAqCZ,EAAEmB,SAAvC,YAAmDnB,EAAEb,KAA5E,IAAoF,kBAAC,KAAD,CAAsBuB,UAAU,sBAGrH,kBAAC,KAAD,CAAaU,SAAS,UACpB,kBAAC,IAAD,CAAQC,KAAK,WAAYlB,OAAQ,kBAAC,KAAD,MAAiBE,KAAK,MAAvD,gHArCS,IAACE,O,+DCmFHe,I,OAhFC,SAACC,GAAW,IAEjBpC,EAAgCoC,EAAhCpC,GAAIqC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,QAASC,EAAQH,EAARG,KAFR,EAGSC,oBAAS,GAHlB,mBAGhBC,EAHgB,KAGNC,EAHM,KAKjBC,EAAU,SAACC,GACbC,IAAQC,KAAK,wBAAyB,CAClC,OAAU,YACV,WAAc,WACd,OAAU,CACN,SAAYF,EACZ,EAAK,QACL,OAAU,WACV,aAAgB,0EAChB,KAASL,MAKrBpC,qBAAU,WACNkC,EAAU,kBAAC,IAAD,CAAenB,KAAK,WCnCd,SAACyB,GACrBI,MAAM,mHACDC,MAAK,SAASC,GACX,OAAOA,EAASC,UAEnBF,MAAK,SAASG,GACRA,GAECR,EAjBE,SAACQ,GAEf,IADA,IAAIC,EAAM,GACD7C,EAAI,EAAGA,EAAI4C,EAAK3C,OAAQD,IAC7B6C,EAAI1C,KAAKyC,EAAK5C,GAAG8C,QAAQC,IAE7B,OAAOF,EAAIG,KAAK,KAYIC,CAAUL,EAAKM,KAAKC,WD4BpCC,CAAShB,KACV,IAGH,IAEMiB,EAAY,WAhCD,IAACC,EAAKC,EAiCnBpB,GAAY,GAEZqB,YAAW,WACPrB,GAAY,MApCFmB,EAyCE,IAzCGC,EAyCE,IAxClBE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,IAAQA,KA2CpD,OAAO,kBAAC,IAAD,CAAO7D,GAAIA,GACjB,kBAAC,IAAD,gHACA,kBAAC,IAAD,CAAOmB,YAAY,kPACfgD,UAAU,QACb,kBAAC,IAAD,CAAMC,aAAc,kBAAC,KAAD,OAApB,4EAID,kBAAC,KAAD,CAAeR,UAAW,kBAAMA,KAAaS,WAAY5B,GACxD,kBAAC,IAAD,KACC,kBAAC,KAAD,KACiBH,EAAQ1B,KAAI,SAACC,EAAGN,GAAJ,OAAU,kBAAC,IAAD,CAAMQ,IAAKR,EAAGiB,OAAO,SAASC,KAAI,2BAAsBZ,EAAEb,IACpDgB,OAAQ,kBAAC,IAAD,CAAQC,IAAKJ,EAAEyD,YAClDzD,EAAE0D,WAFmB,IAEN1D,EAAE2D,iBAI/B,kBAAC,KAAD,CAAavC,SAAS,UAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQV,UAAU,aAAaL,KAAK,MAApC,uGE/DVuD,GAAS3E,cA2BA4E,GAzBM,SAAC,GAAsB,IAApB1E,EAAmB,EAAnBA,GAAIW,EAAe,EAAfA,MAAOgE,EAAQ,EAARA,GAElC,OAAO,kBAAC,IAAD,CAAO3E,GAAIA,GAChB,kBAAC,IAAD,CACD4E,KAAM,kBAAC,IAAD,CAAcC,QAASF,EAAIG,UAAQ,QACvCL,KAAWM,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAFzC,KAKD,yBAAK9D,IAAKN,EAAOqE,IAAK,UCiFTC,GA9FH,WAAO,IAAD,EACmBzC,mBAAS,QAD5B,mBACV0C,EADU,KACEC,EADF,OAEqB3C,mBAAS,QAF9B,mBAEV4C,EAFU,KAEGC,EAFH,OAGc7C,mBAAS,MAHvB,mBAGV8C,EAHU,KAGGC,EAHH,OAIW/C,mBAAS,kBAAC,IAAD,CAAetB,KAAK,WAJxC,mBAIVsE,EAJU,KAIFnD,EAJE,OAKYG,mBAAS,IALrB,mBAKVF,EALU,KAKFmD,EALE,OAMMjD,mBAAS,MANf,mBAMVD,EANU,KAMLmD,EANK,OAOYlD,mBAAS,IAPrB,mBAOVvC,EAPU,KAOF0F,EAPE,OAQUnD,mBAAS,GARnB,mBAQVoD,EARU,KAQHC,EARG,OASQrD,mBAAS,IATjB,mBASV7B,EATU,KASHmF,EATG,KAWjB3F,qBAAU,WACT,IAAM4F,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QADvC,4CAoBf,4BAAAC,EAAA,sEACoBvD,IAAQC,KAAK,uBADjC,OACOuD,EADP,OAECd,EAAQc,GACRhE,EAAU,MAHX,4CApBe,sBAEfqD,EAAQK,EAAUO,IAAI,gBACtBzD,IAAQ0D,WAAU,YAAgC,IAAD,IAA5BC,OAAU/F,EAAkB,EAAlBA,KAAM0C,EAAY,EAAZA,KACpC,GAAa,yBAAT1C,EAAiC,CACpC,IAAMgG,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQzD,EAAK0D,OAAS1D,EAAK0D,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,GAE1B,gCAAThG,GAA8D,aAApB0C,EAAK8D,aAClD5E,EAAU,MACVoD,EAAWtC,EAAKF,WAEJ,gCAATxC,GAA8D,aAApB0C,EAAK8D,aAClD5E,EAAU,MACVsD,EAAWxC,EAAKF,SAASiE,OACzBrB,EAAUD,EAAS,IACnBuB,QAAQC,IAAIjE,EAAKF,SAASiE,WAjBb,mCAyBfG,GACAC,MACE,IAEH,IAAM3C,EAAK,SAAA4C,GACVlC,EAAekC,EAAEC,cAAcC,QAAQC,KAQlCJ,EAAW,WAAkB,IAAjB1B,EAAgB,uDAAP,GAC1B/C,IAAQC,KAAK,wBAAyB,CACrC,OAAU,WACV,WAAc,WACd,OAAU,CACT,QAAW,OACX,SAAY,aACZ,MAAS,GACT,EAAK,QAEL,aAAgB,0EAChB,KAASP,EACT,OAAUqD,MAMb,OACC,kBAAC,IAAD,CAAM+B,YAAazC,EAAY0C,OAC9B,kBAAC,IAAD,KACC,kBAAC,IAAD,CACC/C,QAAS,kBAAMM,EAAc,SAC7B0C,SAAyB,SAAf3C,GAEV,kBAAC,IAAD,OACD,kBAAC,IAAD,CACCL,QAAS,kBAAMM,EAAc,YAC7B0C,SAAyB,YAAf3C,GAEV,kBAAC,IAAD,SAGF,kBAAC,IAAD,CAAME,YAAaA,EAAaI,OAAQA,EAAQxF,GAAG,QAClD,kBAAC,GAAD,CAAOA,GAAG,OAAOsF,YAAaA,EAAaX,GAAIA,EAAItC,UAAWA,EAAWE,KAAMA,EAAMtC,QAASA,EAAS2F,OAAQA,EAC3G1F,UAxCW,SAACS,GAClBmF,EAASnF,GACT0E,EAAe,UAsCaiC,SAAUA,IACpC,kBAAC,GAAD,CAActH,GAAG,QAAQ2E,GAAIA,EAAIhE,MAAOA,KAEzC,kBAAC,IAAD,CAAMyE,YAAa,SAAUI,OAAQA,EAAQxF,GAAG,WAC/C,kBAAC,GAAD,CAASqC,UAAWA,EAAWrC,GAAG,SAASsF,YAAaA,EAAaX,GAAIA,EAAIrC,QAASA,EAASC,KAAMA,OChGzGM,IAAQC,KAAK,gBAQbgF,IAASC,OAAO,kBAAC,GAAD,MAASrB,SAASsB,eAAe,W","file":"static/js/main.647c78db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport moment from \"moment\";\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\nimport Icon24OpenIn from '@vkontakte/icons/dist/24/open_in';\n\n\nconst Posts = ({ id, postArr,  showPhoto }) => {\n\n\tuseEffect(() => {\n\t}, []);\n\n\n\tconst getDate = (date) => {\n\t\treturn moment(date*1000).format('DD.MM.YYYY  h:mm')\n\t}\n\n\tconst getPhotoArr = (arrDoc) => {\n\t\tlet photoArr = []\n\t\tfor (let i = 0; i < arrDoc.length; i++) {\n\t\t\tif (arrDoc[i].type === \"photo\") {\n\t\t\t\tphotoArr.push(arrDoc[i].photo)\n\t\t\t}\n\t\t}\n\t\treturn photoArr\n\t}\n\n\treturn <Panel id={id}>\n\t\t<PanelHeader>Лента</PanelHeader>\n\t\t{postArr.length > 0 && postArr.map((p) => {\n\t\t\tif (!p.is_pinned) {\n\t\t\t\treturn <Group key={p.id}>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={<Avatar  src=\"https://sun1-25.userapi.com/c857616/v857616788/170f9b/EKExqwLJWgs.jpg\" size={48}></Avatar>}\n\t\t\t\t\t\t\tdescription={getDate(p.date)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<a className='text-decor-none' target='_blank' href='https://vk.com/moiresunke'>Мои рисунки, наброски | Бот</a>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t{p.text}\n\t\t\t\t\t\t{getPhotoArr(p.attachments).length > 0 && <Div ><div className='photo-shell'>{getPhotoArr(p.attachments).map((p) => {\n\t\t\t\t\t\t\tlet lastItem = p.sizes.length - 1\n\t\t\t\t\t\t\t// return <a key={p.id} href={p.sizes[lastItem].url}><img src={p.sizes[lastItem].url} alt={'img'} /></a>\n\t\t\t\t\t\t\treturn <img key={p.id} className='photo-post' key={p.id} src={p.sizes[lastItem].url} alt={'img'} onClick={() => showPhoto(p.sizes[lastItem].url)} />\n\t\t\t\t\t\t})}</div>\n\t\t\t\t\t\t\t<Separator wide />\n\t\t\t\t\t\t\t<a target='_blank' href={`https://vk.com/moiresunke?w=wall${p.owner_id}_${p.id}`} > <Icon24CommentOutline className='fix-margin-icon'/></a>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<FixedLayout vertical=\"bottom\">\n\t\t\t\t\t\t\t\t<Button mode=\"tertiary\"  before={<Icon24OpenIn/>} size=\"xl\" > Предложить новость </Button>\n\t\t\t\t\t\t</FixedLayout>\n\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t}\n\t\t})}\n\t</Panel>\n};\n\nPosts.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Posts;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Switch from '@vkontakte/vkui/dist/components/Switch/Switch';\nimport PullToRefresh from '@vkontakte/vkui/dist/components/PullToRefresh/PullToRefresh';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport {GoogleSpreadsheet} from \"google-spreadsheet\";\nimport connect from \"@vkontakte/vk-connect\";\nimport {getTable} from \"../api\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\nimport Separator from \"@vkontakte/vkui/dist/components/Separator/Separator\";\n\nconst getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\n\nconst Сatalog = (props) => {\n\n    const {id, setPopout, userArr, lang} = props\n    const [fetching, setFetching] = useState(false)\n\n    const getUser = (userID) => {\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"users.get\",\n            \"request_id\": \"getUsers\",\n            \"params\": {\n                \"user_ids\": userID,\n                \"v\": \"5.103\",\n                \"fields\": 'photo_50',\n                \"access_token\": '85685eaa85685eaa85685eaa2d8504b3b58856885685eaad8e8ae5c720f4db08e7e9ee0',\n                'lang' : lang\n            }\n        });\n    }\n\n    useEffect(() => {\n        setPopout(<ScreenSpinner size='large' />)\n        getTable(getUser)\n    }, []);\n\n\n    const people = []\n\n    const onRefresh = () => {\n        setFetching(true)\n\n        setTimeout(() => {\n            setFetching(false)\n            // this.setState({\n            // \titems: [this.getNewItem(), ...this.state.items],\n            // \tfetching: false\n            // });\n        }, getRandomInt(600, 2000));\n    }\n\n\treturn <Panel id={id}>\n\t\t<PanelHeader>Каталог художников</PanelHeader>\n\t\t<Group description=\"Вы будете получать только важные уведомления\"\n\t\t\t   separator=\"show\">\n\t\t\t<Cell asideContent={<Switch/>}>\n\t\t\t\tPush-уведомления\n\t\t\t</Cell>\n\t\t</Group>\n\t\t<PullToRefresh onRefresh={() => onRefresh()} isFetching={fetching}>\n\t\t\t<Group>\n\t\t\t\t<List>\n                    {userArr.map((p, i) => <Cell key={i} target='_blank' href={`https://vk.com/id${p.id}`}\n                                                 before={<Avatar src={p.photo_50}/>}\n                    >{p.first_name} {p.last_name}</Cell>)}\n\t\t\t\t</List>\n\t\t\t</Group>\n\t\t</PullToRefresh>\n        <FixedLayout vertical=\"bottom\">\n            <Div>\n                <Button className='button-fix' size=\"xl\"> Попасть в каталог </Button>\n            </Div>\n        </FixedLayout>\n\n\t</Panel>\n\n}\n\n\nСatalog.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Сatalog;\n","\r\nconst getUserId = (data) => {\r\n    let arr = []\r\n    for (let i = 0; i < data.length; i++) {\r\n        arr.push(data[i].content.$t)\r\n    }\r\n    return arr.join(',')\r\n}\r\n\r\n\r\nexport const getTable = (getUser) => {\r\n    fetch('https://spreadsheets.google.com/feeds/cells/1SX9lV4-URRyErZJT-tDc6-A4vbpMzTniQKtUsRk10kg/1/public/full?alt=json')\r\n        .then(function(response) {\r\n            return response.json();\r\n        })\r\n        .then(function(data) {\r\n            if(data) {\r\n                // setShowUsers(getUserId(data.feed.entry))\r\n                getUser(getUserId(data.feed.entry))\r\n            }\r\n        })\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport PanelHeaderContent from '@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport {getTable} from \"../api\";\nimport connect from \"@vkontakte/vk-connect\";\nimport moment from \"moment\";\nimport Gallery from \"@vkontakte/vkui/dist/components/Gallery/Gallery\";\nimport HeaderButton from \"@vkontakte/vkui/dist/components/HeaderButton/HeaderButton\";\nimport {IOS, platform} from \"@vkontakte/vkui\";\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osName = platform();\n\nconst PhotoPreview = ({ id, photo, go}) => {\n\n\treturn <Panel id={id}>\n\t\t\t<PanelHeader\n\t\tleft={<HeaderButton onClick={go} data-to=\"home\">\n\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t</HeaderButton>}\n\t> </PanelHeader>\n\t\t<img src={photo} alt={'img'} />\n\t</Panel>\n};\n\nPhotoPreview.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default PhotoPreview;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './App.css'\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Epic from \"@vkontakte/vkui/dist/components/Epic/Epic\";\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nimport Posts from \"./panels/Posts\";\nimport Сatalog from \"./panels/Сatalog\";\nimport PhotoPreview from \"./panels/PhotoPreview\";\n\nconst App = () => {\n\tconst [activeView, setActiveView] = useState('post');\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [userArr,setUserArr] = useState([])\n\tconst [lang,setLang] = useState('ru')\n\tconst [postArr,setPostArr] = useState([])\n\tconst [offset,setOffset] = useState(0)\n\tconst [photo, setPhoto]= useState('')\n\n\tuseEffect(() => {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\tsetLang(urlParams.get('vk_language' || \"ru\"))\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t\tif (type === 'VKWebAppCallAPIMethodResult' && data.request_id === \"getUsers\") {\n\t\t\t\tsetPopout(null)\n\t\t\t\tsetUserArr(data.response)\n\t\t\t}\n\t\t\tif (type === 'VKWebAppCallAPIMethodResult' && data.request_id === \"getPosts\") {\n\t\t\t\tsetPopout(null)\n\t\t\t\tsetPostArr(data.response.items)\n\t\t\t\tsetOffset(offset + 50)\n\t\t\t\tconsole.log(data.response.items)\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t\tgetPosts()\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst showPhoto = (photo) => {\n\t\tsetPhoto(photo)\n\t\tsetActivePanel('photo')\n\t}\n\n\tconst getPosts = (offset = '') => {\n\t\tconnect.send(\"VKWebAppCallAPIMethod\", {\n\t\t\t\"method\": \"wall.get\",\n\t\t\t\"request_id\": \"getPosts\",\n\t\t\t\"params\": {\n\t\t\t\t\"filters\": 'post',\n\t\t\t\t\"owner_id\": '-113161053',\n\t\t\t\t\"count\": 50,\n\t\t\t\t\"v\": \"5.105\",\n\t\t\t\t// \"access_token\": '90367c6c798c106c4e98663bed2148d2dd86964270a75b329668efd46b8aa051b8aab8d98dceb5bbd8d5a',\n\t\t\t\t\"access_token\": '85685eaa85685eaa85685eaa2d8504b3b58856885685eaad8e8ae5c720f4db08e7e9ee0',\n\t\t\t\t'lang' : lang,\n\t\t\t\t'offset': offset\n\t\t\t}\n\t\t});\n\t}\n\n\n\treturn (\n\t\t<Epic activeStory={activeView} tabbar={\n\t\t\t<Tabbar>\n\t\t\t\t<TabbarItem\n\t\t\t\t\tonClick={() => setActiveView('post')}\n\t\t\t\t\tselected={activeView === 'post'}\n\t\t\t\t\t// text=\"Новости\"\n\t\t\t\t><Icon28Newsfeed /></TabbarItem>\n\t\t\t\t<TabbarItem\n\t\t\t\t\tonClick={() => setActiveView('catalog')}\n\t\t\t\t\tselected={activeView === 'catalog'}\n\t\t\t\t\t// text=\"Каталог художников\"\n\t\t\t\t><Icon28More /></TabbarItem>\n\t\t\t</Tabbar>\n\t\t}>\n\t\t\t<View activePanel={activePanel} popout={popout} id=\"post\">\n\t\t\t\t<Posts id='home' fetchedUser={fetchedUser} go={go} setPopout={setPopout} lang={lang} postArr={postArr} offset={offset}\n\t\t\t\t\t   showPhoto={showPhoto} getPosts={getPosts}/>\n\t\t\t\t<PhotoPreview id='photo' go={go} photo={photo}/>\n\t\t\t</View>\n\t\t\t<View activePanel={'people'} popout={popout} id=\"catalog\">\n\t\t\t\t<Сatalog setPopout={setPopout} id='people' fetchedUser={fetchedUser} go={go} userArr={userArr} lang={lang}/>\n\t\t\t</View>\n\t\t</Epic>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}